set -eu

rec="$1"
cube="$2"
stage="$3"
out="$4"
config="$5"

[[ -z "$cube" ]] && { echo >&2 "Error: \$cube"; exit 100; }

# These are relative to the cube dir.
while IFS= read -r assignment; do
    declare -- "$assignment"
done < <(sed -En -- 's:^i ([^ ]+) (.*):\1=\2:p' "$rec")

threads="$(sed -En -- 's:^threads (.*):\1:p' "$config")"

tar -xf "$cube/$src/hello-2.12.tar.gz"
mkdir build
cd build
../hello-2.12/configure --prefix="$cube/$out"
make -j"$threads"
make -j"$threads" install DESTDIR="$stage/_"
# We'll end up with files in $stage/_$cube/$out/, for reasons. Note that $cube begins with a slash.

if [[ -e "$stage/_$cube/$out/_" ]]; then
    # That file will clobber "$stage/_". No easy and predictable way to work around it.
    echo >&2 "Error: '$stage/_$cube/$out/_' would clobber '$stage/_'"
    exit 100
fi
[[ "$stage" == *- ]] && { echo >&2 "Error: \$stage"; exit 100; }
find "$stage/_$cube/$out/" -mindepth 1 -maxdepth 1 -exec mv -- {} "$stage" \;
[[ -z "$stage" ]] && { echo >&2 "Error: \$stage"; exit 100; }
rm -r -- "$stage/_"
